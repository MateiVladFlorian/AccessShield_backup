 package org.accessshield_backup;

import ApplicationManager.ManagerBuildings.BuildingManager;
import ApplicationManager.Builds;
import Entities.Account;
import Entities.Building;
import Entities.Rooms;
import core.AccountSession;
import java.math.BigDecimal;
import java.security.SecureRandom;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import jpa.AccountJpaController;
import jpa.BuildingJpaController;

/**
 *
 * @author vlad
 */
public class CreateBuild extends javax.swing.JFrame {
    private Building building;
    
    /**
     * Creates new form CreateBuild
     */
    public CreateBuild() 
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogPane1 = new ApplicationManager.DialogPane();
        apply = new javax.swing.JButton();
        cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("New Building");

        apply.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        apply.setText("Apply");
        apply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyActionPerformed(evt);
            }
        });

        cancel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(dialogPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96)
                .addComponent(apply, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(155, 155, 155))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(dialogPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apply, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        int code = JOptionPane.showConfirmDialog(this,
        "Are you sure you want to unregister the new building?",
        "New Building",
        JOptionPane.WARNING_MESSAGE);
       
        if(code == JOptionPane.OK_OPTION)
            this.setVisible(false);

    }//GEN-LAST:event_cancelActionPerformed

    private void applyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyActionPerformed
        building = new Building();
        building.setName(dialogPane1.build_name.getText());
        
        int rooms = Integer.parseInt(dialogPane1.spinner.getValue().toString());
        building.setCountRooms(rooms);
        building.setAddressLocation(dialogPane1.set_address.getText());
        
        double price = Double.parseDouble(dialogPane1.jFormattedTextField1.getText());
        BigDecimal pricePerRoom = BigDecimal.valueOf(price);
        building.setPrice(pricePerRoom);
        
        Timestamp createdAt = Timestamp.valueOf(LocalDateTime.now());
        building.setCreatedAt(createdAt);
        
        String accessKey = new String(dialogPane1.jPasswordField1.getPassword());
        building.setAccessKey(accessKey);
        
        createNewBuilding(building);
        populateBuildingRooms();

    }//GEN-LAST:event_applyActionPerformed
    
    private void createNewBuilding(Building building) {
        BuildingJpaController buildings = new BuildingJpaController();
        AccountJpaController ajc = new AccountJpaController();
        
        Account account = ajc.getAccountFromUsername(AccountSession.getUsername());
        building.setAccountId(account);
        boolean res = buildings.InsertBuilding(building);

        if(res) {
            JOptionPane.showMessageDialog(null, "A new building has been successfully added.");
            this.setVisible(false);
        }
        else
            JOptionPane.showMessageDialog(null, "The building data are malformed.");
    }
    
    private void populateBuildingRooms() {
        EntityManagerFactory f = Persistence.createEntityManagerFactory("org_AccessShield_backup_jar_1.0-SNAPSHOTPU");
        EntityManager e = f.createEntityManager();
        
        int rooms = Integer.parseInt(dialogPane1.spinner.getValue().toString());
        boolean[] table = new boolean[rooms];
        
        for(int i = 0; i < table.length; i++) 
            table[i] = false;
        
        SecureRandom rand = new SecureRandom();
        int counter = 0;
        
        String[] roomType = new String[] {
          "bedroom", "kitchen", "bathroom", "reading room",
          "administration room", "guest room", "dining room", "waiting room"
        };
        
        while(counter < table.length)
        {
            int index = rand.nextInt(table.length);
            int roomTypeIndex = rand.nextInt(roomType.length);
            int capacity = rand.nextInt(2, 6);
            
            if(!table[index]) {
                table[index] = true;
                counter++;
                
                Rooms room = new Rooms();
                room.setCapacity(capacity);
                
                room.setBuildId(building);
                room.setRoomNumber((index + 1) + "");
                
                room.setRoomType(roomType[roomTypeIndex]);
                room.setStatus("available");
                
                BuildingJpaController buildings = new BuildingJpaController();
                room.setBuildId(buildings.getBuildingByName(dialogPane1.build_name.getText()));
                
                e.getTransaction().begin();
                e.persist(room);
                e.getTransaction().commit();
            }
        }
        
        Builds built = BuildingManager.GetWindow();
        built.UpdateBuildings();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateBuild.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CreateBuild().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton apply;
    private javax.swing.JButton cancel;
    private ApplicationManager.DialogPane dialogPane1;
    // End of variables declaration//GEN-END:variables
}
